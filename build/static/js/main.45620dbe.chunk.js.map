{"version":3,"sources":["components/Header/index.js","components/DishItems/index.js","components/HomePage/index.js","App.js","index.js"],"names":["Header","_ref","cartItems","_jsxs","className","children","_jsx","AiOutlineShoppingCart","reduce","acc","item","quantity","DishItems","dishDetails","addItemToCart","removeItemFromCart","dishId","dishName","dishType","dishPrice","dishCurrency","dishDescription","dishImage","dishCalories","addonCat","dishAvailability","onIncreaseQuantity","onDecreaseQuantity","getQuantity","cartItem","find","concat","type","onClick","length","alt","src","HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","response","setResponse","_useState5","_useState6","activeCategoryId","setActiveCategoryId","_useState7","_useState8","setCartItems","dish","prev","map","_objectSpread","newDish","_toConsumableArray","filter","fetchRestaurantApi","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiResponse","data","updatedData","wrap","_context","next","fetch","sent","json","tableMenuList","table_menu_list","eachMenu","menuCategory","menu_category","menuCategoryId","menu_category_id","menuCategoryImage","menu_category_image","categoryDishes","category_dishes","eachDish","dish_id","dish_name","dish_price","dish_image","dish_currency","dish_calories","dish_description","dish_Availability","dish_Type","stop","apply","arguments","useEffect","role","Loader","color","height","width","eachCategory","renderDishes","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45620dbe.chunk.js","sourcesContent":["import {AiOutlineShoppingCart} from 'react-icons/ai'\nimport './index.css'\n\nconst Header = ({cartItems}) => {\n  const getCartItemsCount = () =>\n    cartItems.reduce((acc, item) => acc + item.quantity, 0)\n\n  const renderCartIcon = () => (\n    <div className=\"cart-icon-container\">\n      <AiOutlineShoppingCart className=\"cart-icon\" />\n      <div className=\"cart-count-badge\">\n        <p className=\"cart-count\">{getCartItemsCount()}</p>\n      </div>\n    </div>\n  )\n\n  return (\n    <header className=\"nav-header\">\n      <h1 className=\"logo-heading\">UNI Resto Cafe</h1>\n      <div className=\"alignment\">\n        <p className=\"my-orders-text\">My Orders</p>\n        {renderCartIcon()}\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import './index.css'\n\nconst DishItems = ({\n  dishDetails,\n  cartItems,\n  addItemToCart,\n  removeItemFromCart,\n}) => {\n  const {\n    dishId,\n    dishName,\n    dishType,\n    dishPrice,\n    dishCurrency,\n    dishDescription,\n    dishImage,\n    dishCalories,\n    addonCat,\n    dishAvailability,\n  } = dishDetails\n\n  const onIncreaseQuantity = () => addItemToCart(dishDetails)\n  const onDecreaseQuantity = () => removeItemFromCart(dishDetails)\n\n  const getQuantity = () => {\n    const cartItem = cartItems.find(item => item.dishId === dishId)\n    return cartItem ? cartItem.quantity : 0\n  }\n\n  const renderControllerButton = () => (\n    <div className=\"controller-container\">\n      <button className=\"button\" type=\"button\" onClick={onDecreaseQuantity}>\n        -\n      </button>\n      <p className=\"quantity\">{getQuantity()}</p>\n      <button className=\"button\" type=\"button\" onClick={onIncreaseQuantity}>\n        +\n      </button>\n    </div>\n  )\n\n  return (\n    <li className=\"dish-item-container\">\n      <div\n        className={`veg-border ${dishType === 1 ? 'non-veg-border' : ''} me-3`}\n      >\n        <div className={`veg-round ${dishType === 1 ? 'non-veg-round' : ''}`} />\n      </div>\n      <div className=\"dish-details-container\">\n        <h1 className=\"dish-name\">{dishName}</h1>\n        <p className=\"dish-currency-price\">\n          {dishCurrency} {dishPrice}\n        </p>\n        <p className=\"dish-description\">{dishDescription}</p>\n        {dishAvailability && renderControllerButton()}\n        {!dishAvailability && (\n          <p className=\"not-availability-text text-danger\">Not available</p>\n        )}\n        {addonCat.length !== 0 && (\n          <p className=\"addon-availability-text\">Customizations available</p>\n        )}\n      </div>\n\n      <p className=\"dish-calories text-warning\">{dishCalories} calories</p>\n      <img className=\"dish-image\" alt={dishName} src={dishImage} />\n    </li>\n  )\n}\n\nexport default DishItems\n","import {useState, useEffect} from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport DishItems from '../DishItems'\n\nimport './index.css'\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [response, setResponse] = useState([])\n  const [activeCategoryId, setActiveCategoryId] = useState('')\n\n  const [cartItems, setCartItems] = useState([])\n\n  const addItemToCart = dish => {\n    const isAlreadyExists = cartItems.find(item => item.dishId === dish.dishId)\n    if (!isAlreadyExists) {\n      const newDish = {...dish, quantity: 1}\n      setCartItems(prev => [...prev, newDish])\n    } else {\n      setCartItems(prev =>\n        prev.map(item =>\n          item.dishId === dish.dishId\n            ? {...item, quantity: item.quantity + 1}\n            : item,\n        ),\n      )\n    }\n  }\n\n  const removeItemFromCart = dish => {\n    const isAlreadyExists = cartItems.find(item => item.dishId === dish.dishId)\n    if (isAlreadyExists) {\n      setCartItems(prev =>\n        prev\n          .map(item =>\n            item.dishId === dish.dishId\n              ? {...item, quantity: item.quantity - 1}\n              : item,\n          )\n          .filter(item => item.quantity > 0),\n      )\n    }\n  }\n\n  const getUpdatedData = tableMenuList =>\n    tableMenuList.map(eachMenu => ({\n      menuCategory: eachMenu.menu_category,\n      menuCategoryId: eachMenu.menu_category_id,\n      menuCategoryImage: eachMenu.menu_category_image,\n      categoryDishes: eachMenu.category_dishes.map(eachDish => ({\n        dishId: eachDish.dish_id,\n        dishName: eachDish.dish_name,\n        dishPrice: eachDish.dish_price,\n        dishImage: eachDish.dish_image,\n        dishCurrency: eachDish.dish_currency,\n        dishCalories: eachDish.dish_calories,\n        dishDescription: eachDish.dish_description,\n        dishAvailability: eachDish.dish_Availability,\n        dishType: eachDish.dish_Type,\n        addonCat: eachDish.addonCat,\n      })),\n    }))\n\n  const fetchRestaurantApi = async () => {\n    const apiUrl =\n      'https://run.mocky.io/v3/77a7e71b-804a-4fbd-822c-3e365d3482cc'\n    const apiResponse = await fetch(apiUrl)\n    const data = await apiResponse.json()\n    const updatedData = getUpdatedData(data[0].table_menu_list)\n    setResponse(updatedData)\n    setActiveCategoryId(updatedData[0].menuCategoryId)\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    fetchRestaurantApi()\n  }, [])\n\n  const onUpdateActiveCategoryIdx = menuCategoryId =>\n    setActiveCategoryId(menuCategoryId)\n\n  const renderTabMenuList = () =>\n    response.map(eachCategory => {\n      const onClickHandler = () =>\n        onUpdateActiveCategoryIdx(eachCategory.menuCategoryId)\n\n      return (\n        <li\n          className={`each-tab-item ${\n            eachCategory.menuCategoryId === activeCategoryId\n              ? 'active-tab-item'\n              : ''\n          }`}\n          key={eachCategory.menuCategoryId}\n          onClick={onClickHandler}\n        >\n          <button type=\"button\" className=\"tab-category-button\">\n            {eachCategory.menuCategory}\n          </button>\n        </li>\n      )\n    })\n\n  const renderDishes = () => {\n    const {categoryDishes} = response.find(\n      eachCategory => eachCategory.menuCategoryId === activeCategoryId,\n    )\n\n    return (\n      <ul className=\"dishes-list-container\">\n        {categoryDishes.map(eachDish => (\n          <DishItems\n            key={eachDish.dishId}\n            dishDetails={eachDish}\n            cartItems={cartItems}\n            addItemToCart={addItemToCart}\n            removeItemFromCart={removeItemFromCart}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  const renderLoader = () => (\n    <div className=\"loader-container\" role=\"status\">\n      <Loader type=\"TailSpin\" color=\"#0284C7\" height={50} width={50} />\n    </div>\n  )\n\n  return isLoading ? (\n    renderLoader()\n  ) : (\n    <div className=\"home-background\">\n      <Header cartItems={cartItems} />\n      <ul className=\"tab-container\">{renderTabMenuList()}</ul>\n      {renderDishes()}\n    </div>\n  )\n}\n\nexport default HomePage\n","import HomePage from './components/HomePage'\nimport './App.css'\n\n// write your code here\nconst App = () => <HomePage />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}